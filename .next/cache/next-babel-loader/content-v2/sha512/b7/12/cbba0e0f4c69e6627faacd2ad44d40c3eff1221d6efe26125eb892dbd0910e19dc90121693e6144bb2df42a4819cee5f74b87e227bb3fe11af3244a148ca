{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Layout from \"@/components/Layout\";\nimport Container from \"@/components/Layout/Container\";\nimport Wrapper from \"@/components/Layout/Wrapper\";\nimport Widget from \"@/components/Layout/Widget\";\nimport PostHeader from \"@/components/Post/PostHeader\";\nimport PostTitle from \"@/components/Post/PostTitle\";\nimport PostBody from \"@/components/Post/PostBody\";\nimport PrevNextBtns from '@/components/Post/PrevNextBtns';\nimport { getPostBySlug, getAllPosts, getPrevNextPost, getTagsMap } from \"@/lib/api\";\nimport markdownToHtml from \"@/lib/markdownToHtml\";\nimport Head from \"next/head\";\nexport default function Post({\n  post,\n  allPosts,\n  prevNextPost,\n  preview,\n  tags\n}) {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post !== null && post !== void 0 && post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404\n    });\n  }\n\n  return __jsx(Layout, {\n    preview: preview\n  }, __jsx(Head, null, __jsx(\"title\", null, post.title, \" | \\u86CB\\u70D8\\u7CD5\"), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: post.ogImage.url\n  }), __jsx(\"meta\", {\n    name: \"description\",\n    itemProp: \"description\",\n    content: post.description\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    itemProp: \"keywords\",\n    content: post.keyword\n  })), __jsx(Container, null, router.isFallback ? __jsx(PostTitle, null, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(Wrapper, null, __jsx(PostHeader, {\n    title: post.title,\n    coverImage: post.coverImage,\n    date: post.date,\n    author: post.author\n  }), __jsx(PostBody, {\n    content: post.content\n  }), __jsx(PrevNextBtns, {\n    prevNextPost: prevNextPost\n  })), __jsx(Widget, {\n    allPosts: allPosts,\n    tags: tags\n  }))));\n}\nexport async function getStaticProps({\n  params\n}) {\n  const allPosts = getAllPosts([\"title\", \"date\", \"slug\", \"author\"]);\n  const prevNextPost = getPrevNextPost(params.slug, [\"title\", \"slug\"]);\n  const post = getPostBySlug(params.slug, [\"title\", \"description\", \"keyword\", \"date\", \"slug\", \"author\", \"content\", \"ogImage\", \"coverImage\"]);\n  const content = await markdownToHtml(post.content || \"\");\n  const tags = getTagsMap();\n  return {\n    props: {\n      allPosts,\n      prevNextPost,\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      }),\n      tags\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts([\"slug\"]);\n  const result = {\n    paths: posts.map(post => {\n      return {\n        params: {\n          slug: post.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}