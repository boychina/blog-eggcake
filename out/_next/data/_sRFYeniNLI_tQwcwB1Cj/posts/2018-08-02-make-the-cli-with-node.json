{"pageProps":{"allPosts":[{"title":"Vue3.0核心源码解读| 组件渲染：vnode 到真实 DOM 是如何转变的？","date":"2020-12-21T23:00:00.322Z","slug":"2020-12-21-vue3-core-source-code-1","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"Vue3.0核心源码解读| 一文看懂Vue3.0的优化","date":"2020-12-19T14:00:00.322Z","slug":"2020-12-19-vue3-core-source-code-0","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"Webpack5搭建React开发环境","date":"2020-12-17T18:00:00.322Z","slug":"2020-12-17-webpack5-build-react-dev-env","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"React 17来了","date":"2020-10-06T12:00:00.322Z","slug":"2020-10-06-react17-coming","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"React-grid-layout 一个支持拖拽的栅格布局库","date":"2020-09-27T12:00:00.322Z","slug":"2020-09-27-react-grid-layout","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"ECMAScript2020新特性总结及使用场景","date":"2020-09-20T12:00:00.322Z","slug":"2020-09-20-ECMAScript2020","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"ECMAScript2019新特性总结及使用场景","date":"2020-08-22T12:00:00.322Z","slug":"2020-08-22-ECMAScript2019","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"ECMAScript2018新特性总结及使用场景","date":"2020-08-12T12:00:00.322Z","slug":"2020-08-12-ECMAScript2018","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"VScode代码注释关键字解析","date":"2020-08-01T12:00:00.322Z","slug":"2020-08-01-vscode-code-annotation-keyword-analysis","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"ECMAScript2017新特性总结及使用场景","date":"2020-07-18T12:00:00.322Z","slug":"2020-07-18-ECMAScript2017","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"ECMAScript2016新特性总结及使用场景","date":"2020-07-11T12:00:00.322Z","slug":"2020-07-11-ECMAScript2016","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"Immutable 详解及 React 中实践","date":"2019-12-18T12:00:00.322Z","slug":"2019-12-18-immutable-react","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"JavsScript 原型","date":"2019-10-24T12:00:00.322Z","slug":"2019-10-24-JavaScript-prototype","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"setState 是同步还是异步的呢？","date":"2019-10-23T12:00:00.322Z","slug":"2019-10-23-setState-sync-or-async","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"JavaScript this 对象查找","date":"2019-09-22T12:00:00.322Z","slug":"2019-09-22-javascript-this-pointer","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"一些常用的正则表达式","date":"2018-12-12T12:00:00.322Z","slug":"2018-12-12-commonly-used-regular-expressionsm","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"前端数据流文件下载三种方式","date":"2018-12-12T12:00:00.322Z","slug":"2018-12-12-downloading-frontend-data-stream-files","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"React16.3+ 新的生命周期钩子","date":"2018-08-15T12:00:00.322Z","slug":"2018-08-15-react-new-life-cycle-hook","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"Vue 服务端渲染","date":"2018-08-15T12:00:00.322Z","slug":"2018-08-15-vue-server-side-render","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"MySQL 常用命令","date":"2018-08-09T12:00:00.322Z","slug":"2018-08-09-mysql-common-commands","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"Vue 和微信小程序的区别、比较","date":"2018-08-07T12:00:00.322Z","slug":"2018-08-07-vue-and-wechat-small-program-differences","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"H5移动端常见问题及注意事项","date":"2018-08-06T12:00:00.322Z","slug":"2018-08-06-common-problems-and-matters-needing-attention-on-h5-mobile-terminal","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"ES6 的 Proxy 和 Reflect","date":"2018-08-04T12:00:00.322Z","slug":"2018-08-04-Proxy-and-Reflect-of-ES6","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"如何用 Node 来制作 CLI","date":"2018-08-02T12:00:00.322Z","slug":"2018-08-02-make-the-cli-with-node","author":{"name":"Hux","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"关于生活与生存","date":"2018-07-31T05:35:07.322Z","slug":"2018-07-31-about-life-and-survival","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"饿了么的 PWA 升级实践","date":"2017-07-12T12:00:00.322Z","slug":"2017-07-12-upgrading-eleme-to-pwa","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"下一代 Web 应用模型 —— Progressive Web App","date":"2017-02-09T12:00:00.322Z","slug":"2017-02-09-nextgen-web-pwa","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"Progressive Web Apps，复兴序章「QCon 上海 2016」","date":"2016-10-20T12:00:00.322Z","slug":"2016-10-20-pwa-qcon2016","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"Progressive Web App 之我见","date":"2016-06-05T12:00:00.322Z","slug":"2016-06-05-pwa-in-my-pov","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"React vs Angular 2：冰与火之歌「译」","date":"2016-02-01T12:00:00.322Z","slug":"2016-02-01-React-vs-Angular2","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"都2015年了，CSS怎么还是这么糟糕","date":"2015-12-28T12:00:00.322Z","slug":"2015-12-28-css-sucks-2015","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"iOS 9，为前端世界都带来了些什么？「译」","date":"2015-12-15T12:00:00.322Z","slug":"2015-12-15-ios9-safari-web","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"设计师如何学习前端？","date":"2015-10-28T12:00:00.322Z","slug":"2015-10-28-how-designer-learn-fe","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"ES5, ES6, ES2016, ES.Next: JavaScript 的版本是怎么回事？「译」","date":"2015-09-22T12:00:00.322Z","slug":"2015-09-22-js-version","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"JavaScript 模块化七日谈","date":"2015-07-09T12:00:00.322Z","slug":"2015-07-09-js-module-7day","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"聊聊「阿里旅行 · 去啊」—— 行业与战略","date":"2015-06-15T12:00:00.322Z","slug":"2015-06-15-alitrip-strategy","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"JavaScript模块化加载","date":"2015-05-25T12:00:00.322Z","slug":"2015-05-25-js-module-loader","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"操作系统的浪漫主义 —— Metro 篇","date":"2015-04-15T12:00:00.322Z","slug":"2015-04-15-os-metro","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"Unix/Linux 扫盲笔记","date":"2015-04-14T12:00:00.322Z","slug":"2015-04-14-unix-linux-note","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"端到端用户场景的定义","date":"2015-03-31T12:00:00.322Z","slug":"2015-03-31-e2e_user_scenarios","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"Digital native 数字原住民","date":"2015-03-25T12:00:00.322Z","slug":"2015-03-25-digital-native","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"如何评价2015年3月9日Apple春季发布会","date":"2015-03-10T12:00:00.322Z","slug":"2015-03-10-apple-event-2015","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"你们觉得响应式好呢，还是手机和PC端分开来写？","date":"2014-11-20T12:00:00.322Z","slug":"2014-11-20-responsive-web-design","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"为什么阿里系软件体验都不好？","date":"2014-10-01T12:00:00.322Z","slug":"2014-10-01-why-alibaba-ux-sucks","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}}],"prevNextPost":{"prevPost":{"title":"关于生活与生存","slug":"2018-07-31-about-life-and-survival"},"nextPost":{"title":"ES6 的 Proxy 和 Reflect","slug":"2018-08-04-Proxy-and-Reflect-of-ES6"}},"post":{"title":"如何用 Node 来制作 CLI","description":"如何用 Node 来制作 CLI","keyword":"Node,Cli","date":"2018-08-02T12:00:00.322Z","slug":"2018-08-02-make-the-cli-with-node","author":{"name":"Hux","picture":"/assets/blog/authors/zhaohuan.jpg"},"content":"<h3>CLI 是什么</h3>\n<p>提起 CLI ， 不由得会想起 vue-cli 和 angular-cli，它们都是基于 Node 的命令行工具。</p>\n<h3>为什么要开发一个 CLI</h3>\n<p>假设你现在要简历一个新项目，这个项目配置和之前的项目配置是一样的。在你没有 CLI 的时候，你只能通过复制、粘贴来进行。\n然而，当你有了 CLI ，你就可以通过命令来完成这些不走。当然，你可以说就新建一个项目，完全没必要再开发一个 CLI 工具。那如果你要新建 n 个项目呢？这个时候，有 CLI 和没有 CLI 的区别就体验出来了。</p>\n<h3>怎么开发一个 CLI</h3>\n<h4>准备</h4>\n<p>开发一个 CLI ，需要用到一下工具：</p>\n<ul>\n<li>commander.js</li>\n<li>ShellJS</li>\n<li>download-git-repo</li>\n<li>chalk</li>\n<li>inquirer</li>\n<li>ora</li>\n</ul>\n<h4>开始</h4>\n<p>新建一个文件夹，名称起做 demo-cli ，并在文件夹内 npm init 。在 demo-cli 文件夹内，新建 bin 文件夹，并在该文件夹内新建 index.js 文件。 紧接着，打开 demo-cli 文件夹内的 package.json 文件，在里边新增加如下命令。</p>\n<pre class=\"hljs\"><code>{\n  <span class=\"hljs-attr\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;demo-cli&quot;</span>,\n  <span class=\"hljs-attr\">&quot;bin&quot;</span>: {\n    <span class=\"hljs-attr\">&quot;demo&quot;</span>: <span class=\"hljs-string\">&quot;./bin/index.js&quot;</span>\n  }\n}\n</code></pre>\n<p>这句代码的意思是指，在你使用 demo 命令的时候，会去执行 bin 文件夹下的 index.js 文件。</p>\n<p>这时候，我们在 index.js 文件，写入一下代码。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-meta\">#!/usr/bin/env node</span>\n\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;Hello CLI&quot;</span>);\n</code></pre>\n<p>在 demo-cli 目录下依次执行 npm link 、 demo ，这个时候，你会发现控制台输出了 hello CLI。</p>\n<p><img src=\"/assets/blog/context/2018-08-02-make-the-cli-with-node/make-the-cli-with-node-01.png\" alt=\"img\"></p>\n<blockquote>\n<p>备注：</p>\n<ul>\n<li>#!/usr/bin/env node 告诉操作系统用 node 来运行此文件</li>\n<li>npm link 作用主要是在开发 npm 模块的时候，我们会希望边开发边调试。这个时候， npm link 就派上用场了。</li>\n</ul>\n</blockquote>\n<h4>逐渐深入</h4>\n<ol>\n<li>在 index.js 文件内，写入如下代码。</li>\n</ol>\n<p>先下载 commander 依赖包，demo-cli 目录下执行</p>\n<blockquote>\n<p>npm install commander -s</p>\n</blockquote>\n<pre class=\"hljs\"><code><span class=\"hljs-meta\">#!/usr/bin/env node</span>\n\n<span class=\"hljs-keyword\">const</span> program = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;commander&quot;</span>);\n\nprogram\n  .version(<span class=\"hljs-string\">&quot;1.0.0&quot;</span>, <span class=\"hljs-string\">&quot;-v, --version&quot;</span>)\n  .command(<span class=\"hljs-string\">&quot;init &lt;dir&gt;&quot;</span>, <span class=\"hljs-string\">&quot;generate a new project&quot;</span>)\n  .action(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">dir, cmd</span>) </span>{\n    <span class=\"hljs-built_in\">console</span>.log(dir, cmd);\n  })\n  .parse(process.argv);\n</code></pre>\n<p>commander 提供了一种使用 node.js 来开发命令行的可能性。我们可以通过 commander 的 option 方法，来定义 commander 的选项，当然，这些定义的选项也会被作为该命令的帮助文档。</p>\n<ul>\n<li>\n<p>version ：用来定义版本号。 commander 默认帮助我们添加 -v，--version 选项。当然，我们也可以重设它。</p>\n</li>\n<li>\n<p>command ：&lt;&gt; 代表必填， [] 代表选填。当 .command() 带有描述参数时，不能采用 .action(callback) 来处理子命令，否则会出错。这告诉 commander ，你将采用单独的可执行文件座位子命令。</p>\n</li>\n<li>\n<p>parse ：解析 process.argv ，解析完成后的数据会存放到 new Command().args 数组中。</p>\n</li>\n</ul>\n<blockquote>\n<p>问题：为什么当 command 没有描述参数，且 parse 方法使用练市调用会报错？\n（猜想： command 有 desc 参数时，返回的是 this，当没有 desc 参数时，返回的是新对象，根据 API Document 得出）</p>\n</blockquote>\n<ol start=\"2\">\n<li>在 bin 文件下创建 index-init.js 文件， 部分代码如下：</li>\n</ol>\n<p>先下载相关依赖，在 demo-cli 目录下执行：</p>\n<blockquote>\n<p>npm install -s shelljs inquirer download-git-repo chalk ora</p>\n</blockquote>\n<pre class=\"hljs\"><code><span class=\"hljs-meta\">#!/usr/bin/env node</span>\n\n<span class=\"hljs-keyword\">const</span> shell = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;shelljs&quot;</span>);\n<span class=\"hljs-keyword\">const</span> program = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;commander&quot;</span>);\n<span class=\"hljs-keyword\">const</span> inquirer = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;inquirer&quot;</span>);\n<span class=\"hljs-keyword\">const</span> download = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;download-git-repo&quot;</span>);\n<span class=\"hljs-keyword\">const</span> chalk = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;chalk&quot;</span>);\n<span class=\"hljs-keyword\">const</span> ora = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;ora&quot;</span>);\n<span class=\"hljs-keyword\">const</span> fs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;fs&quot;</span>);\n<span class=\"hljs-keyword\">const</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;path&quot;</span>);\n<span class=\"hljs-keyword\">const</span> spinner = ora();\n\nprogram.parse(process.argv);\n\n<span class=\"hljs-keyword\">let</span> dir = program.args[<span class=\"hljs-number\">0</span>];\n\n<span class=\"hljs-keyword\">const</span> questions = [\n  {\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;input&quot;</span>,\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;name&quot;</span>,\n    <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;请输入项目名称&quot;</span>,\n    <span class=\"hljs-attr\">default</span>: <span class=\"hljs-string\">&quot;demo-static&quot;</span>,\n    <span class=\"hljs-attr\">validate</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">name</span> =&gt;</span> {\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-regexp\">/^[a-z]+/</span>.test(name)) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n      } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;项目名称必须以小写字母开头&quot;</span>;\n      }\n    }\n  }\n];\n\ninquirer.prompt(questions).then(<span class=\"hljs-function\"><span class=\"hljs-params\">auswers</span> =&gt;</span> {\n  <span class=\"hljs-comment\">// 初始化模块文件</span>\n  dewnloadTemplate(auswers);\n});\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dewnloadTemplate</span>(<span class=\"hljs-params\">params</span>) </span>{\n  spinner.start(<span class=\"hljs-string\">&quot;loading&quot;</span>);\n  <span class=\"hljs-keyword\">let</span> isHasDir = fs.existsSync(path.resolve(dir));\n  <span class=\"hljs-keyword\">if</span> (isHasDir) {\n    spinner.fail(<span class=\"hljs-string\">&quot;当前目录已存在！&quot;</span>);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n  }\n  <span class=\"hljs-comment\">// 开始下载模块文件</span>\n  download(<span class=\"hljs-string\">&quot;gitlab:git.gitlab.com/demo-static&quot;</span>, dir, { <span class=\"hljs-attr\">clone</span>: <span class=\"hljs-literal\">true</span> }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">\n    err\n  </span>) </span>{\n    <span class=\"hljs-keyword\">if</span> (err) {\n      spinner.fail(err);\n    }\n    updateTemplateFile(params);\n  });\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">updateTemplateFile</span>(<span class=\"hljs-params\">params</span>) </span>{\n  <span class=\"hljs-keyword\">let</span> { name, description } = params;\n  fs.readFile(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${path.resolve(dir)}</span>/package.json`</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">err, buffer</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (err) {\n      <span class=\"hljs-built_in\">console</span>.log(chalk.red(err));\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n    }\n    shell.rm(<span class=\"hljs-string\">&quot;-f&quot;</span>, <span class=\"hljs-string\">`<span class=\"hljs-subst\">${path.resolve(dir)}</span>/.git`</span>);\n    shell.rm(<span class=\"hljs-string\">&quot;-f&quot;</span>, <span class=\"hljs-string\">`<span class=\"hljs-subst\">${path.resolve(dir)}</span>/CHANGELOG.md`</span>);\n    <span class=\"hljs-keyword\">let</span> packageJson = <span class=\"hljs-built_in\">JSON</span>.parse(buffer);\n    <span class=\"hljs-built_in\">Object</span>.assign(packageJson, params);\n    fs.writeFileSync(\n      <span class=\"hljs-string\">`<span class=\"hljs-subst\">${path.resolve(dir)}</span>/package.json`</span>,\n      <span class=\"hljs-built_in\">JSON</span>.stringify(packageJson, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-number\">2</span>)\n    );\n    fs.writeFileSync(\n      <span class=\"hljs-string\">`<span class=\"hljs-subst\">${path.resolve(dir)}</span>/README.md`</span>,\n      <span class=\"hljs-string\">`# <span class=\"hljs-subst\">${name}</span>\\n&gt; <span class=\"hljs-subst\">${description}</span>`</span>\n    );\n    spinner.succeed(<span class=\"hljs-string\">&quot;创建完毕&quot;</span>);\n  });\n}\n</code></pre>\n<ul>\n<li>\n<p>inquirer 主要提供交互命令的功能。 validate 返回 true 代表输入验证合法，如果返回任意字符串，则会替代默认的错误消息返回。</p>\n</li>\n<li>\n<p>通过 node 中 fs 模块来判断文件夹是否已存在。</p>\n</li>\n</ul>\n<blockquote>\n<p>path.resolve 方法用于将相对路径转为绝对路径。它接收多个参数，依次表示所有进入的路径，直到将最后一个参数撰文绝对路径。如果根据参数无法得到绝对路径，就以当前路径座位基准。除了根目录，该方法的返回值都不带尾部的斜杠。</p>\n</blockquote>\n","ogImage":{"url":"/assets/blog/cover/2018-08-02-make-the-cli-with-node.jpg"},"coverImage":"/assets/blog/cover/2018-08-02-make-the-cli-with-node.jpg"},"tags":{"alibaba":{"value":2,"posts":[{"tag":"alibaba,体验","slug":"2014-10-01-why-alibaba-ux-sucks"},{"tag":"alibaba","slug":"2015-06-15-alitrip-strategy"}]},"体验":{"value":1,"posts":[{"tag":"alibaba,体验","slug":"2014-10-01-why-alibaba-ux-sucks"}]},"响应式":{"value":1,"posts":[{"tag":"响应式,自适应","slug":"2014-11-20-responsive-web-design"}]},"自适应":{"value":1,"posts":[{"tag":"响应式,自适应","slug":"2014-11-20-responsive-web-design"}]},"Apple":{"value":1,"posts":[{"tag":"Apple","slug":"2015-03-10-apple-event-2015"}]},"数字":{"value":1,"posts":[{"tag":"数字","slug":"2015-03-25-digital-native"}]},"端到端":{"value":1,"posts":[{"tag":"端到端","slug":"2015-03-31-e2e_user_scenarios"}]},"Unix":{"value":1,"posts":[{"tag":"Unix,Linux","slug":"2015-04-14-unix-linux-note"}]},"Linux":{"value":1,"posts":[{"tag":"Unix,Linux","slug":"2015-04-14-unix-linux-note"}]},"UI":{"value":1,"posts":[{"tag":"UI","slug":"2015-04-15-os-metro"}]},"JavaScript":{"value":13,"posts":[{"tag":"JavaScript,模块化","slug":"2015-05-25-js-module-loader"},{"tag":"JavaScript,模块化","slug":"2015-07-09-js-module-7day"},{"tag":"JavaScript","slug":"2015-09-22-js-version"},{"tag":"前端,JavaScript","slug":"2015-12-15-ios9-safari-web"},{"tag":"JavaScript","slug":"2018-08-04-Proxy-and-Reflect-of-ES6"},{"tag":"JavaScript","slug":"2018-12-12-commonly-used-regular-expressionsm"},{"tag":"JavaScript","slug":"2019-09-22-javascript-this-pointer"},{"tag":"JavaScript","slug":"2019-10-24-JavaScript-prototype"},{"tag":"JavaScript","slug":"2020-07-11-ECMAScript2016"},{"tag":"JavaScript","slug":"2020-07-18-ECMAScript2017"},{"tag":"JavaScript","slug":"2020-08-12-ECMAScript2018"},{"tag":"JavaScript","slug":"2020-08-22-ECMAScript2019"},{"tag":"JavaScript","slug":"2020-09-20-ECMAScript2020"}]},"模块化":{"value":2,"posts":[{"tag":"JavaScript,模块化","slug":"2015-05-25-js-module-loader"},{"tag":"JavaScript,模块化","slug":"2015-07-09-js-module-7day"}]},"前端":{"value":3,"posts":[{"tag":"前端","slug":"2015-10-28-how-designer-learn-fe"},{"tag":"前端,JavaScript","slug":"2015-12-15-ios9-safari-web"},{"tag":"前端","slug":"2018-12-12-downloading-frontend-data-stream-files"}]},"CSS":{"value":1,"posts":[{"tag":"CSS","slug":"2015-12-28-css-sucks-2015"}]},"react":{"value":7,"posts":[{"tag":"react,angular","slug":"2016-02-01-React-vs-Angular2"},{"tag":"react","slug":"2018-08-15-react-new-life-cycle-hook"},{"tag":"react","slug":"2019-10-23-setState-sync-or-async"},{"tag":"react","slug":"2019-12-18-immutable-react"},{"tag":"react","slug":"2020-09-27-react-grid-layout"},{"tag":"react","slug":"2020-10-06-react17-coming"},{"tag":"webpack,react","slug":"2020-12-17-webpack5-build-react-dev-env"}]},"angular":{"value":1,"posts":[{"tag":"react,angular","slug":"2016-02-01-React-vs-Angular2"}]},"PWA":{"value":4,"posts":[{"tag":"PWA","slug":"2016-06-05-pwa-in-my-pov"},{"tag":"PWA","slug":"2016-10-20-pwa-qcon2016"},{"tag":"PWA","slug":"2017-02-09-nextgen-web-pwa"},{"tag":"PWA","slug":"2017-07-12-upgrading-eleme-to-pwa"}]},"生活":{"value":1,"posts":[{"tag":"生活","slug":"2018-07-31-about-life-and-survival"}]},"Node":{"value":1,"posts":[{"tag":"Node","slug":"2018-08-02-make-the-cli-with-node"}]},"H5":{"value":1,"posts":[{"tag":"H5","slug":"2018-08-06-common-problems-and-matters-needing-attention-on-h5-mobile-terminal"}]},"vue":{"value":4,"posts":[{"tag":"vue,小程序","slug":"2018-08-07-vue-and-wechat-small-program-differences"},{"tag":"vue,ssr","slug":"2018-08-15-vue-server-side-render"},{"tag":"vue","slug":"2020-12-19-vue3-core-source-code-0"},{"tag":"vue","slug":"2020-12-21-vue3-core-source-code-1"}]},"小程序":{"value":1,"posts":[{"tag":"vue,小程序","slug":"2018-08-07-vue-and-wechat-small-program-differences"}]},"MySQL":{"value":1,"posts":[{"tag":"MySQL","slug":"2018-08-09-mysql-common-commands"}]},"ssr":{"value":1,"posts":[{"tag":"vue,ssr","slug":"2018-08-15-vue-server-side-render"}]},"VScode":{"value":1,"posts":[{"tag":"VScode","slug":"2020-08-01-vscode-code-annotation-keyword-analysis"}]},"webpack":{"value":1,"posts":[{"tag":"webpack,react","slug":"2020-12-17-webpack5-build-react-dev-env"}]}}},"__N_SSG":true}