{"pageProps":{"allPosts":[{"title":"Vue3.0核心源码解读| 组件渲染：vnode 到真实 DOM 是如何转变的？","date":"2020-12-21T23:00:00.322Z","slug":"2020-12-21-vue3-core-source-code-1","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"Vue3.0核心源码解读| 一文看懂Vue3.0的优化","date":"2020-12-19T14:00:00.322Z","slug":"2020-12-19-vue3-core-source-code-0","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"Webpack5搭建React开发环境","date":"2020-12-17T18:00:00.322Z","slug":"2020-12-17-webpack5-build-react-dev-env","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"React 17来了","date":"2020-10-06T12:00:00.322Z","slug":"2020-10-06-react17-coming","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"React-grid-layout 一个支持拖拽的栅格布局库","date":"2020-09-27T12:00:00.322Z","slug":"2020-09-27-react-grid-layout","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"ECMAScript2020新特性总结及使用场景","date":"2020-09-20T12:00:00.322Z","slug":"2020-09-20-ECMAScript2020","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"ECMAScript2019新特性总结及使用场景","date":"2020-08-22T12:00:00.322Z","slug":"2020-08-22-ECMAScript2019","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"ECMAScript2018新特性总结及使用场景","date":"2020-08-12T12:00:00.322Z","slug":"2020-08-12-ECMAScript2018","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"VScode代码注释关键字解析","date":"2020-08-01T12:00:00.322Z","slug":"2020-08-01-vscode-code-annotation-keyword-analysis","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"ECMAScript2017新特性总结及使用场景","date":"2020-07-18T12:00:00.322Z","slug":"2020-07-18-ECMAScript2017","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"ECMAScript2016新特性总结及使用场景","date":"2020-07-11T12:00:00.322Z","slug":"2020-07-11-ECMAScript2016","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"Immutable 详解及 React 中实践","date":"2019-12-18T12:00:00.322Z","slug":"2019-12-18-immutable-react","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"JavsScript 原型","date":"2019-10-24T12:00:00.322Z","slug":"2019-10-24-JavaScript-prototype","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"setState 是同步还是异步的呢？","date":"2019-10-23T12:00:00.322Z","slug":"2019-10-23-setState-sync-or-async","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"JavaScript this 对象查找","date":"2019-09-22T12:00:00.322Z","slug":"2019-09-22-javascript-this-pointer","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"一些常用的正则表达式","date":"2018-12-12T12:00:00.322Z","slug":"2018-12-12-commonly-used-regular-expressionsm","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"前端数据流文件下载三种方式","date":"2018-12-12T12:00:00.322Z","slug":"2018-12-12-downloading-frontend-data-stream-files","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"React16.3+ 新的生命周期钩子","date":"2018-08-15T12:00:00.322Z","slug":"2018-08-15-react-new-life-cycle-hook","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"Vue 服务端渲染","date":"2018-08-15T12:00:00.322Z","slug":"2018-08-15-vue-server-side-render","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"MySQL 常用命令","date":"2018-08-09T12:00:00.322Z","slug":"2018-08-09-mysql-common-commands","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"Vue 和微信小程序的区别、比较","date":"2018-08-07T12:00:00.322Z","slug":"2018-08-07-vue-and-wechat-small-program-differences","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"H5移动端常见问题及注意事项","date":"2018-08-06T12:00:00.322Z","slug":"2018-08-06-common-problems-and-matters-needing-attention-on-h5-mobile-terminal","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"ES6 的 Proxy 和 Reflect","date":"2018-08-04T12:00:00.322Z","slug":"2018-08-04-Proxy-and-Reflect-of-ES6","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"如何用 Node 来制作 CLI","date":"2018-08-02T12:00:00.322Z","slug":"2018-08-02-make-the-cli-with-node","author":{"name":"Hux","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"关于生活与生存","date":"2018-07-31T05:35:07.322Z","slug":"2018-07-31-about-life-and-survival","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"}},{"title":"饿了么的 PWA 升级实践","date":"2017-07-12T12:00:00.322Z","slug":"2017-07-12-upgrading-eleme-to-pwa","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"下一代 Web 应用模型 —— Progressive Web App","date":"2017-02-09T12:00:00.322Z","slug":"2017-02-09-nextgen-web-pwa","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"Progressive Web Apps，复兴序章「QCon 上海 2016」","date":"2016-10-20T12:00:00.322Z","slug":"2016-10-20-pwa-qcon2016","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"Progressive Web App 之我见","date":"2016-06-05T12:00:00.322Z","slug":"2016-06-05-pwa-in-my-pov","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"React vs Angular 2：冰与火之歌「译」","date":"2016-02-01T12:00:00.322Z","slug":"2016-02-01-React-vs-Angular2","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"都2015年了，CSS怎么还是这么糟糕","date":"2015-12-28T12:00:00.322Z","slug":"2015-12-28-css-sucks-2015","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"iOS 9，为前端世界都带来了些什么？「译」","date":"2015-12-15T12:00:00.322Z","slug":"2015-12-15-ios9-safari-web","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"设计师如何学习前端？","date":"2015-10-28T12:00:00.322Z","slug":"2015-10-28-how-designer-learn-fe","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"ES5, ES6, ES2016, ES.Next: JavaScript 的版本是怎么回事？「译」","date":"2015-09-22T12:00:00.322Z","slug":"2015-09-22-js-version","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"JavaScript 模块化七日谈","date":"2015-07-09T12:00:00.322Z","slug":"2015-07-09-js-module-7day","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"聊聊「阿里旅行 · 去啊」—— 行业与战略","date":"2015-06-15T12:00:00.322Z","slug":"2015-06-15-alitrip-strategy","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"JavaScript模块化加载","date":"2015-05-25T12:00:00.322Z","slug":"2015-05-25-js-module-loader","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"操作系统的浪漫主义 —— Metro 篇","date":"2015-04-15T12:00:00.322Z","slug":"2015-04-15-os-metro","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"Unix/Linux 扫盲笔记","date":"2015-04-14T12:00:00.322Z","slug":"2015-04-14-unix-linux-note","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"端到端用户场景的定义","date":"2015-03-31T12:00:00.322Z","slug":"2015-03-31-e2e_user_scenarios","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"Digital native 数字原住民","date":"2015-03-25T12:00:00.322Z","slug":"2015-03-25-digital-native","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"如何评价2015年3月9日Apple春季发布会","date":"2015-03-10T12:00:00.322Z","slug":"2015-03-10-apple-event-2015","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"你们觉得响应式好呢，还是手机和PC端分开来写？","date":"2014-11-20T12:00:00.322Z","slug":"2014-11-20-responsive-web-design","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}},{"title":"为什么阿里系软件体验都不好？","date":"2014-10-01T12:00:00.322Z","slug":"2014-10-01-why-alibaba-ux-sucks","author":{"name":"Hux","picture":"/assets/blog/authors/hux.jpg"}}],"prevNextPost":{"prevPost":{"title":"Vue 和微信小程序的区别、比较","slug":"2018-08-07-vue-and-wechat-small-program-differences"},"nextPost":{"title":"React16.3+ 新的生命周期钩子","slug":"2018-08-15-react-new-life-cycle-hook"}},"post":{"title":"MySQL 常用命令","description":"MySQL 常用命令","keyword":"MySQL,命令","date":"2018-08-09T12:00:00.322Z","slug":"2018-08-09-mysql-common-commands","author":{"name":"淡烘糕","picture":"/assets/blog/authors/zhaohuan.jpg"},"content":"<h3>一、基础命令</h3>\n<ol>\n<li>启动服务\n<ol>\n<li>说明：以管理员身份运行 cmd</li>\n<li>格式：net start 服务名称</li>\n<li>示例：net start MySQL57</li>\n</ol>\n</li>\n<li>停止服务\n<ol>\n<li>说明：以管理员身份运行 cmd</li>\n<li>格式：net stop 服务名称</li>\n<li>示例：net stop MySQL57</li>\n</ol>\n</li>\n<li>连接数据\n<ol>\n<li>格式：mysql -u 用户名 -p</li>\n<li>示例：mysql -u root -p\n输入安装时设置的密码</li>\n</ol>\n</li>\n<li>退出登录（断开连接）\n<ol>\n<li>quit 或 exit</li>\n</ol>\n</li>\n<li>查看版本（连接后可以执行）\n<ol>\n<li>示例：select version();</li>\n</ol>\n</li>\n<li>显示当前时间（连接后可以执行）\n<ol>\n<li>示例：select now();</li>\n</ol>\n</li>\n<li>远程连接\n<ol>\n<li>格式：mysql -h ip 地址 -u 用户名 -p\n输入远程 MySQL 密码</li>\n</ol>\n</li>\n</ol>\n<h3>二、数据库操作</h3>\n<ol>\n<li>查看所有数据库\n<ol>\n<li>格式：show databases;</li>\n</ol>\n</li>\n<li>创建数据库\n<ol>\n<li>格式：create database 数据库名 charset=utf8;</li>\n<li>示例：create database mrlihai charset=utf8;</li>\n</ol>\n</li>\n<li>删除数据库\n<ol>\n<li>格式：drop database 数据库名;</li>\n<li>示例：drop database mrlihai;</li>\n</ol>\n</li>\n<li>切换数据库\n<ol>\n<li>格式：use 数据库名;</li>\n<li>示例：use mrlihai;</li>\n</ol>\n</li>\n<li>查看当前选择的数据库\n<ol>\n<li>select database();</li>\n</ol>\n</li>\n</ol>\n<h3>三、表操作</h3>\n<ol>\n<li>查看当前数据库中所有的表\n<ol>\n<li>show tables;</li>\n</ol>\n</li>\n<li>创建表\n<ol>\n<li>格式：create table 表名(列及类型);</li>\n<li>说明：\n<ol>\n<li>auto_increment 表示自增长</li>\n<li>primary key 表示主键</li>\n<li>not null 表示不为空</li>\n</ol>\n</li>\n<li>示例：create table student(id int auto_increment primary key, name varchar(20) not null, age int not null, gender bit default 1, address varchar(20), isDelete bit default 0);</li>\n</ol>\n</li>\n<li>删除表\n<ol>\n<li>格式：drop table 表名;</li>\n<li>示例：drop table student;</li>\n</ol>\n</li>\n<li>查看表结构\n<ol>\n<li>格式：desc 表名</li>\n<li>示例：desc student;</li>\n</ol>\n</li>\n<li>查看建表语句\n<ol>\n<li>格式：show create table 表名;</li>\n<li>示例：show create table student;</li>\n</ol>\n</li>\n<li>重命名表名\n<ol>\n<li>格式：rename table 原表名 to 新表明;</li>\n<li>示例：rename table car to newcar;</li>\n</ol>\n</li>\n<li>修改表\n<ol>\n<li>格式：alter table 表名 add|change|drop 列名 类型;</li>\n<li>示例：alter table newcar add isDelete bit default 0;</li>\n</ol>\n</li>\n</ol>\n<pre class=\"hljs\"><code># 添加表字段\n\n<span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> Persons <span class=\"hljs-keyword\">add</span> education <span class=\"hljs-type\">varchar</span>(<span class=\"hljs-number\">10</span>) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">Null</span>;\n<span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> Persons <span class=\"hljs-keyword\">add</span> PersonId <span class=\"hljs-type\">int</span> unsigned <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">Null</span> auto_increment <span class=\"hljs-keyword\">primary</span> <span class=\"hljs-keyword\">key</span>;\n</code></pre>\n<h3>四、数据操作</h3>\n<ol>\n<li>增\n<ol>\n<li>全列插入\n<ol>\n<li>格式：insert into 表名 values(...);</li>\n<li>说明：主键列是自动增长，但是在全列插入时需要占位，通常使用 0，插入成功以后以实际数据为准</li>\n<li>示例：insert into student values(0, &quot;tom&quot;, 19, 1, &quot;北京&quot;, 0);</li>\n</ol>\n</li>\n<li>缺省插入\n<ol>\n<li>格式：insert into 表名(列 1, 列 2, ...) values(值 1, 值 2, ...);</li>\n<li>示例：insert into student(name, age, address) values(&quot;李雷&quot;, 19, &quot;上海&quot;);</li>\n</ol>\n</li>\n<li>同时插入多条数据\n<ol>\n<li>格式：insert into 表名 values(...), (...), ...</li>\n<li>示例：insert into student values(0, &quot;韩梅梅&quot;, 18, 0, &quot;北京&quot;, 0), (0, &quot;pony&quot;, 22, 1, &quot;西安&quot;, 0), (0, &quot;lili&quot;, 20, 0, &quot;成都&quot;, 0);</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>删\n<ol>\n<li>格式：delete from 表名 where 条件;</li>\n<li>示例：delete from student where id=4;</li>\n<li>注意：没有条件是全部删除，慎用。</li>\n</ol>\n</li>\n<li>改\n<ol>\n<li>格式：update 表名 set 列 1=值 1, 列 2=值 2, ... where 条件;</li>\n<li>示例：update student set age=16 where id=7;</li>\n<li>注意：没有条件是全部列都修改，慎用。</li>\n</ol>\n</li>\n<li>查\n<ol>\n<li>说明：查询表中的全部数据</li>\n<li>格式：select * from 表名;</li>\n<li>示例：select * from student;</li>\n</ol>\n</li>\n</ol>\n<h3>五、查</h3>\n<ol>\n<li>\n<p>基本语法</p>\n<ol>\n<li>格式：select * from 表名</li>\n<li>说明：\n<ol>\n<li>from 关键字后面是表名，表示数据来源于这张表</li>\n<li>select 后面写表中的列名，如果是*表示在结果集中显示表中的所有列</li>\n<li>在 select 后面的列名部分，可以使用 as 为列名起别名，这个别名显示在结果集中</li>\n<li>如果要查询多个列，之间使用逗号分隔</li>\n</ol>\n</li>\n<li>示例\n<ol>\n<li>select * from student;</li>\n<li>select name, age from student;</li>\n<li>select name as n, age from student;</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>消除重复行\n在 select 后面列前面使用 distinct 可以消除重复的行</p>\n<ol>\n<li>示例：select gender from student;</li>\n</ol>\n</li>\n<li>\n<p>条件查询</p>\n<ol>\n<li>\n<p>语法</p>\n<ol>\n<li>select * from 表名 where 条件;</li>\n</ol>\n</li>\n<li>\n<p>比较运算符</p>\n<ol>\n<li>等于 =</li>\n<li>大于 &gt;</li>\n<li>小于 &lt;</li>\n<li>大于等于 &gt;=</li>\n<li>小于等于 &lt;=</li>\n<li>不等于 != 或 &lt;&gt;\n<ol>\n<li>需求：查询 id 值大于 8 的所有数据</li>\n<li>示例：select * from student where id&gt;8;</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>逻辑运算符</p>\n<ol>\n<li>and 并且</li>\n<li>or 或者</li>\n<li>not 非\n<ol>\n<li>需求：查询 id 值大于 7 的女同学</li>\n<li>示例：select * from student where id&gt;7 and gender=0;</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>模糊查询\ninsert into student values(0, &quot;习近平&quot;, 65, 1, &quot;北京&quot;, 0);\ninsert into student values(0, &quot;习大&quot;, 66, 1, &quot;北京&quot;, 0);</p>\n<ol>\n<li>关键词：like</li>\n<li>说明：%表示任意多个任意字符</li>\n<li>_表示一个任意字符</li>\n<li>需求：查询姓习的同学</li>\n<li>示例：\n<ol>\n<li>select * from student where name like &quot;习%&quot;;</li>\n<li>select * from student where name like &quot;习__&quot;;</li>\n<li>select * from student where name like &quot;习_&quot;;</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>范围查询</p>\n<ol>\n<li>in 表示在一个非连续的范围内</li>\n<li>between ... and ... 表示在一个连续的范围内\n<ol>\n<li>需求：查询编号为 8、10、12 的学生</li>\n<li>示例：select * from student where id in (8, 10, 12);</li>\n<li>需求：查询编号为 6 到 8 的学生</li>\n<li>示例：select * from student where id between 6 and 8;</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>空判断\ninsert into student(name, age) values(&quot;特朗普&quot;, 70);</p>\n<ol>\n<li>注意：null 与 &quot;&quot; 是不同的</li>\n<li>判断空： is null</li>\n<li>判断非空： is not null\n<ol>\n<li>需求：查询没有地址的同学</li>\n<li>示例：select * from student where address is null;</li>\n<li>需求：查询有地址的同学</li>\n<li>示例：select * from student where address is not null;</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>优先级</p>\n<ol>\n<li>小括号 &gt; not &gt; 比较运算符 &gt; 逻辑运算符</li>\n<li>and 比 or 优先级高，如果同时出现并希望先选 or，需要结合()来使用</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>聚合\n为了快速得到统计数据，提供了 5 个聚合函数</p>\n<ol>\n<li>count(<em>) 表示计算总行数，括号中可以写</em>和列名</li>\n<li>max(列) 表示求此列的最大值</li>\n<li>min(列) 表示求此列的最小值</li>\n<li>sum(列) 表示求此列的和</li>\n<li>avg(列) 表示求此列的平均值\n<ol>\n<li>需求：查询学生总数</li>\n<li>示例：select count(*) form student;</li>\n<li>需求：查询女生的编号最大值</li>\n<li>示例：select max(id) from student where gender=0;</li>\n<li>需求：查询女的编号的最小值</li>\n<li>示例：select min(id) from student where gender=0;</li>\n<li>需求：查询所有女生的年龄和</li>\n<li>示例：select sum(age) from student;</li>\n<li>需求：查询所有学生的年龄平均值</li>\n<li>示例：select avg(age) from student;</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>分组\n按照字段分组，表示此字段相同的数据会被放到一个集合中。\n分组后，只能查询出相同的数据列，对于有差异的数据列无法显示在结果集中\n可以对分组后的数据进行统计，做聚合运算</p>\n<ol>\n<li>语法：select 列 1,列 2,聚合... from 表名 group by 列 1,列 2,列 3,...</li>\n<li>需求：查询男女生总数</li>\n<li>示例：\n<ol>\n<li>select gender,count(*) from student group by gender;</li>\n<li>select name,gender,count(*) from student group by gender,age;</li>\n</ol>\n</li>\n<li>分组后的数据筛选：select 列 1,列 2,聚合... from 表名 group by 列 1, 列 2, 列 3, ... having 列 1,...聚合...</li>\n<li>示例：select gender,count(*) from student group by gender having gender=1;</li>\n</ol>\n<blockquote>\n<p>where 与 having 的区别：\nwhere 是对 from 后面指定的表进行筛选，属于对原始数据的筛选\nhaving 是对 group by 的结果进行筛选</p>\n</blockquote>\n</li>\n<li>\n<p>排序</p>\n<ol>\n<li>语法：select * from 表名 order by 列 1 asc|desc, lie2 asc|desc, ...</li>\n<li>说明：\n<ol>\n<li>将数据按照列 1 进行排序，如果某些列 1 的值相同，则按照列 2 进行排序</li>\n<li>默认按照从小到大的顺序排序</li>\n<li>asc 升序</li>\n<li>desc 降序</li>\n</ol>\n</li>\n<li>需求：将没有被删除的数据按照年龄排序</li>\n<li>示例：\n<ol>\n<li>select * from student where isDelete=0 order by age desc;</li>\n<li>select * from student where isDelete=0 order by age desc, id desc;</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>分页</p>\n<ol>\n<li>语法：select * from 表名 limit start, count;</li>\n<li>说明：start 索引从 0 开发</li>\n<li>示例：\n<ol>\n<li>select * from student limit 0, 3;</li>\n<li>select * from student limit 3, 3;</li>\n<li>select * from student where gender=1 limit 0, 3;</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3>六、关联</h3>\n<ol>\n<li>建表语句：\n<ol>\n<li>create table class(id int auto_increment primary key, name varchar(20) not null, stuNum int not null);</li>\n<li>create table students(id int auto_increment primary key, name varchar(20) not null, gender bit default 1, classid int not null, foreign key(classid) references class(id));</li>\n</ol>\n</li>\n<li>插入一些数据：\n<ol>\n<li>insert into class values(0, &quot;class01&quot;, 55), (0, &quot;class02&quot;, 50), (0, &quot;class03&quot;, 60), (0, &quot;class04&quot;, 80);</li>\n<li>insert into students values(0, &quot;tom&quot;, 1, 1);</li>\n<li>insert into students values(0, &quot;lucy&quot;, 1, 10); //创建不成功，报错</li>\n<li>insert into students values(0, &quot;jack&quot;, 1, 2);\nselect * from students;</li>\n</ol>\n</li>\n<li>关联查询：\n<ol>\n<li>select <a href=\"http://students.name\">students.name</a>, <a href=\"http://class.name\">class.name</a> from class inner join students on calss.id=students.classid;</li>\n<li>select <a href=\"http://students.name\">students.name</a>, <a href=\"http://class.name\">class.name</a> from class left join students on class.id=students.classid;</li>\n<li>select <a href=\"http://students.name\">students.name</a>, <a href=\"http://class.name\">class.name</a> from class right join students on <a href=\"http://class.id=students.class.id\">class.id=students.class.id</a>;</li>\n</ol>\n</li>\n<li>分类：\n<ol>\n<li>表 A innner join 表 B;\n表 A 与表 B 匹配的行会出现在结果集中</li>\n<li>表 A left join 表 B;\n表 A 与表 B 匹配的行会出现在结果集中，外加表 A 中独有的数据，未对应的数据使用 null 填充</li>\n<li>表 A right join 表 B;\n表 A 与表 B 匹配的行会出现在结果集中，外加表 B 中独有的数据，未对应的数据使用 null 填充</li>\n</ol>\n</li>\n</ol>\n","ogImage":{"url":"/assets/blog/cover/2018-08-09-mysql-common-commands.jpg"},"coverImage":"/assets/blog/cover/2018-08-09-mysql-common-commands.jpg"},"tags":{"alibaba":{"value":2,"posts":[{"tag":"alibaba,体验","slug":"2014-10-01-why-alibaba-ux-sucks"},{"tag":"alibaba","slug":"2015-06-15-alitrip-strategy"}]},"体验":{"value":1,"posts":[{"tag":"alibaba,体验","slug":"2014-10-01-why-alibaba-ux-sucks"}]},"响应式":{"value":1,"posts":[{"tag":"响应式,自适应","slug":"2014-11-20-responsive-web-design"}]},"自适应":{"value":1,"posts":[{"tag":"响应式,自适应","slug":"2014-11-20-responsive-web-design"}]},"Apple":{"value":1,"posts":[{"tag":"Apple","slug":"2015-03-10-apple-event-2015"}]},"数字":{"value":1,"posts":[{"tag":"数字","slug":"2015-03-25-digital-native"}]},"端到端":{"value":1,"posts":[{"tag":"端到端","slug":"2015-03-31-e2e_user_scenarios"}]},"Unix":{"value":1,"posts":[{"tag":"Unix,Linux","slug":"2015-04-14-unix-linux-note"}]},"Linux":{"value":1,"posts":[{"tag":"Unix,Linux","slug":"2015-04-14-unix-linux-note"}]},"UI":{"value":1,"posts":[{"tag":"UI","slug":"2015-04-15-os-metro"}]},"JavaScript":{"value":13,"posts":[{"tag":"JavaScript,模块化","slug":"2015-05-25-js-module-loader"},{"tag":"JavaScript,模块化","slug":"2015-07-09-js-module-7day"},{"tag":"JavaScript","slug":"2015-09-22-js-version"},{"tag":"前端,JavaScript","slug":"2015-12-15-ios9-safari-web"},{"tag":"JavaScript","slug":"2018-08-04-Proxy-and-Reflect-of-ES6"},{"tag":"JavaScript","slug":"2018-12-12-commonly-used-regular-expressionsm"},{"tag":"JavaScript","slug":"2019-09-22-javascript-this-pointer"},{"tag":"JavaScript","slug":"2019-10-24-JavaScript-prototype"},{"tag":"JavaScript","slug":"2020-07-11-ECMAScript2016"},{"tag":"JavaScript","slug":"2020-07-18-ECMAScript2017"},{"tag":"JavaScript","slug":"2020-08-12-ECMAScript2018"},{"tag":"JavaScript","slug":"2020-08-22-ECMAScript2019"},{"tag":"JavaScript","slug":"2020-09-20-ECMAScript2020"}]},"模块化":{"value":2,"posts":[{"tag":"JavaScript,模块化","slug":"2015-05-25-js-module-loader"},{"tag":"JavaScript,模块化","slug":"2015-07-09-js-module-7day"}]},"前端":{"value":3,"posts":[{"tag":"前端","slug":"2015-10-28-how-designer-learn-fe"},{"tag":"前端,JavaScript","slug":"2015-12-15-ios9-safari-web"},{"tag":"前端","slug":"2018-12-12-downloading-frontend-data-stream-files"}]},"CSS":{"value":1,"posts":[{"tag":"CSS","slug":"2015-12-28-css-sucks-2015"}]},"react":{"value":7,"posts":[{"tag":"react,angular","slug":"2016-02-01-React-vs-Angular2"},{"tag":"react","slug":"2018-08-15-react-new-life-cycle-hook"},{"tag":"react","slug":"2019-10-23-setState-sync-or-async"},{"tag":"react","slug":"2019-12-18-immutable-react"},{"tag":"react","slug":"2020-09-27-react-grid-layout"},{"tag":"react","slug":"2020-10-06-react17-coming"},{"tag":"webpack,react","slug":"2020-12-17-webpack5-build-react-dev-env"}]},"angular":{"value":1,"posts":[{"tag":"react,angular","slug":"2016-02-01-React-vs-Angular2"}]},"PWA":{"value":4,"posts":[{"tag":"PWA","slug":"2016-06-05-pwa-in-my-pov"},{"tag":"PWA","slug":"2016-10-20-pwa-qcon2016"},{"tag":"PWA","slug":"2017-02-09-nextgen-web-pwa"},{"tag":"PWA","slug":"2017-07-12-upgrading-eleme-to-pwa"}]},"生活":{"value":1,"posts":[{"tag":"生活","slug":"2018-07-31-about-life-and-survival"}]},"Node":{"value":1,"posts":[{"tag":"Node","slug":"2018-08-02-make-the-cli-with-node"}]},"H5":{"value":1,"posts":[{"tag":"H5","slug":"2018-08-06-common-problems-and-matters-needing-attention-on-h5-mobile-terminal"}]},"vue":{"value":4,"posts":[{"tag":"vue,小程序","slug":"2018-08-07-vue-and-wechat-small-program-differences"},{"tag":"vue,ssr","slug":"2018-08-15-vue-server-side-render"},{"tag":"vue","slug":"2020-12-19-vue3-core-source-code-0"},{"tag":"vue","slug":"2020-12-21-vue3-core-source-code-1"}]},"小程序":{"value":1,"posts":[{"tag":"vue,小程序","slug":"2018-08-07-vue-and-wechat-small-program-differences"}]},"MySQL":{"value":1,"posts":[{"tag":"MySQL","slug":"2018-08-09-mysql-common-commands"}]},"ssr":{"value":1,"posts":[{"tag":"vue,ssr","slug":"2018-08-15-vue-server-side-render"}]},"VScode":{"value":1,"posts":[{"tag":"VScode","slug":"2020-08-01-vscode-code-annotation-keyword-analysis"}]},"webpack":{"value":1,"posts":[{"tag":"webpack,react","slug":"2020-12-17-webpack5-build-react-dev-env"}]}}},"__N_SSG":true}